variables:
  IMAGE_NAME: sysnet2024/emsp_v2
stages:
  # - test
  - build
  - deploy

# run_tests:
#   stage: test
#   image: node:lts-slim
#   before_script:
#     - npm install
#   script:
#     - npm run test

build_image:
  stage: build
  image: docker:latest
  tags:
    - sysnet_runner
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - echo "Successfully logged in to Docker Hub"
  script:
    - docker build -t sysnet2024/emsp_v2 .
    - echo "Successfully build the image"
    - docker push sysnet2024/emsp_v2
    - echo "Successfully pushed to docker hub"

deploy:
  stage: deploy
  tags:
    - sysnet_runner
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $HOST "
      docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD &&
      docker stop emsp_v2 || true &&
      docker rm emsp_v2 || true &&
      docker images | grep '$IMAGE_NAME' | awk '{print $3}' | xargs docker rmi -f || true &&
      docker pull $IMAGE_NAME &&
      docker run -d -p 4021:4021 --name emsp_v2 --mount type=bind,source=/data/logs,target=/var/www/emsp/logs --mount type=bind,source=/data/uploads,target=/var/www/emsp/public/images $IMAGE_NAME"
